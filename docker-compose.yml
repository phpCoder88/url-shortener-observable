version: '3.8'

services:
  shortener:
    container_name: shortener
    build:
      context: .
      dockerfile: Dockerfile
    ports:
    - "8000:8000"
    environment:
      DB_HOST: db
      DB_USER: shortener
      DB_NAME: shortener
      DB_PASSWORD: 123456789
      DB_SSL_MODE: disable
    labels:
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - shortener

  beats:
    image: docker.elastic.co/beats/filebeat:7.15.0
    container_name: beats
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOST: '["http://elasticsearch:9200"]'
    user: root
    volumes:
      - "./filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - elasticsearch
    command: ["--strict.perms=false"]
    networks:
      - shortener

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./.docker/elasticsearch/data/:/usr/share/elasticsearch/data/
    ports:
      - "9200:9200"
    networks:
      - shortener

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - shortener

  db:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_DB: shortener
      POSTGRES_USER: shortener
      POSTGRES_PASSWORD: 123456789
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./.docker/postgresql/data/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shortener"]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 5s
    networks:
      - shortener

  migrations:
    image: migrate/migrate
    volumes:
    - ./migrations:/migrations
    depends_on:
      db:
        condition: service_healthy
    command: ["-path", "/migrations", "-database",  "postgres://shortener:123456789@db:5432/shortener?sslmode=disable", "up"]
    networks:
      - shortener

  adminer:
    image: adminer
    restart: always
    ports:
      - "8001:8080"
    depends_on:
      - db
    networks:
      - shortener

volumes:
  shortenerDB:
    driver: local

networks:
  shortener:
    driver: bridge
